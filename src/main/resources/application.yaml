# 服务端口
server:
  port: 8080


# Hikari 连接池配置
spring:
  datasource:
    type: "com.zaxxer.hikari.HikariDataSource"
    url: "jdbc:mysql://localhost:3306/app_hunter_dev?useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true"
    hikari:
      username: app_hunter
      password: apphunter123
      driver-class-name: "com.mysql.cj.jdbc.Driver"
      read-only: false # 连接只读数据库时配置为true， 保证安全
      connection-timeout: 30000 # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
      idle-timeout: 600000 # 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
      max-lifetime: 1800000 # 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）
      maximum-pool-size: 20 # 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
      minimum-idle: 1


  # JPA 配置
  jpa:
    database: mysql
    show-sql: true # 在控制台显示自动生成的sql语句
    hibernate:
      ddl-auto: none
      naming: # 遇到大写字母 加”_”的命名策略
        implicit-strategy: "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
        physical-strategy: "org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy"
    properties:
      {hibernate.dialect: "org.hibernate.dialect.MySQL8Dialect"}

  # 缓配置
  cache:
    cache-names: applist
    type: caffeine


  mail:
    host: "smtp.163.com"
    username:
    password:
    port: 465
    protocol: smtp
    default-encoding: "UTF-8"
    properties:
      {
        mail.smtp.socketFactory.class: "javax.net.ssl.SSLSocketFactory",
        mail.debug: true
      }

  # logback 日志配置
  output:
    ansi:
      enabled: always
logging.file: "logs/app-hunter.log"
logging:
  file:
    max-size: "20MB"
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr([%thread]){red}%clr(%5p) %clr(---){faint} %clr(%logger{79}){cyan} %clr(:){faint} %m%n%wEx"
    file: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr([%thread]){red}%clr(%5p) %clr(---){faint} %clr(%logger{79}){cyan} %clr(:){faint} %m%n%wEx"
  level:
    { com.zereao: debug,
      com: info,
      ch.qos.logback: info,
      org: info
    }